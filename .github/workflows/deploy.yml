name: Deploy to Amazon EC2

on:
  pull_request:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: stopickr-github-actions-s3
  CODE_DEPLOY_APPLICATION_NAME: stopickr-codedeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: stopickr-codedeploy-group

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Replace environment variables in Yaml
        run: |
          # MySQL configuration
          sed -i 's|${mysql_url}|${{ secrets.MYSQL_URL }}|g' ./src/main/resources/application.yml
          sed -i 's|${mysql_username}|${{ secrets.MYSQL_USERNAME }}|g' ./src/main/resources/application.yml
          sed -i 's|${mysql_password}|${{ secrets.MYSQL_PASSWORD }}|g' ./src/main/resources/application.yml

          # Gmail configuration
          sed -i 's|${mail_port}|${{ secrets.MAIL_PORT }}|g' ./src/main/resources/application.yml
          sed -i 's|${mail_username}|${{ secrets.MAIL_USERNAME }}|g' ./src/main/resources/application.yml
          sed -i 's|${mail_password}|${{ secrets.MAIL_PASSWORD }}|g' ./src/main/resources/application.yml

          # Other secrets
          sed -i 's|${public_data_service_key}|${{ secrets.PUBLIC_DATA_SERVICE_KEY }}|g' ./src/main/resources/application.yml
          sed -i 's|${jwt_secret}|${{ secrets.JWT_SECRET }}|g' ./src/main/resources/application.yml

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build -x test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/${{ github.sha }}.zip \
            --source .

      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=${{ env.S3_BUCKET_NAME }},key=${{ github.sha }}.zip,bundleType=zip
